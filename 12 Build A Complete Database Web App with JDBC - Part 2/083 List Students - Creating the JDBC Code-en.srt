1
00:00:00,369 --> 00:00:03,086
<v Chad>Alright, so we've completed the first item</v>

2
00:00:03,086 --> 00:00:06,206
on our to-do list, we created our Student.java class.

3
00:00:06,206 --> 00:00:07,436
Now we're gonna focus on creating

4
00:00:07,436 --> 00:00:09,686
our Database Utility Class.

5
00:00:10,835 --> 00:00:13,308 line:15% 
So, again, moving back into Eclipse,

6
00:00:13,308 --> 00:00:15,990 line:15% 
the first thing I wanna do is create the shell

7
00:00:15,990 --> 00:00:18,033 line:15% 
or structure here for this Class,

8
00:00:18,033 --> 00:00:20,494 line:15% 
so I'll simply do a right-click

9
00:00:20,494 --> 00:00:22,494
and I'll say New, Class.

10
00:00:24,883 --> 00:00:29,539 line:15% 
And the name for this Class, I'll call it StudentDbUtil,

11
00:00:29,539 --> 00:00:32,383 line:15% 
and I'll keep all the other defaults here on this screen

12
00:00:32,383 --> 00:00:35,383 line:15% 
and I'll click on the Finish button.

13
00:00:36,737 --> 00:00:39,558
Okay, great, so a very basic shell of a Class right now,

14
00:00:39,558 --> 00:00:40,963
StudentDbUtil,

15
00:00:40,963 --> 00:00:45,119
and this is where we need to write some cool code here.

16
00:00:45,119 --> 00:00:46,881
So, the first thing we wanna do is

17
00:00:46,881 --> 00:00:48,692
set up a reference to a DataSource,

18
00:00:48,692 --> 00:00:51,699
so I'll just simply say private DataSource dataSource

19
00:00:51,699 --> 00:00:55,116
and I'll fix the imports here, javax.sql.

20
00:00:56,656 --> 00:00:57,864 line:15% 
Alright, so that's good.

21
00:00:57,864 --> 00:01:01,869 line:15% 
Now we need to set up a Constructor for this Class,

22
00:01:01,869 --> 00:01:03,820 line:15% 
so here I'll say StudentDbUtil.

23
00:01:03,820 --> 00:01:06,490 line:15% 
Remember, the Constructor had the same name as the Class.

24
00:01:06,490 --> 00:01:09,172 line:15% 
I'll say StudentDbUtil, pass in theDataSource,

25
00:01:09,172 --> 00:01:10,240 line:15% 
and I simply assign it.

26
00:01:10,240 --> 00:01:13,259 line:15% 
So, here I'll say dataSource equals theDataSource.

27
00:01:13,259 --> 00:01:15,975 line:15% 
So, theDataSource is the parameter being passed

28
00:01:15,975 --> 00:01:18,355 line:15% 
into this Constructor and that's basically it.

29
00:01:18,355 --> 00:01:19,992 line:15% 
So, we're gonna have somebody

30
00:01:19,992 --> 00:01:22,570 line:15% 
that'll create this StudentDbUtil

31
00:01:22,570 --> 00:01:25,632 line:15% 
and they'll pass in a reference to our dataSource object.

32
00:01:25,632 --> 00:01:27,698 line:15% 
And actually, our Servlet will kinda do this work,

33
00:01:27,698 --> 00:01:31,031 line:15% 
but we'll see that in a following video.

34
00:01:32,165 --> 00:01:34,499
Alright, now the main thing in this StudentDbUtil is

35
00:01:34,499 --> 00:01:36,075
that we're gonna have a method

36
00:01:36,075 --> 00:01:38,315
that's actually gonna list the students,

37
00:01:38,315 --> 00:01:40,440
so let me just kinda write the shell here

38
00:01:40,440 --> 00:01:43,357
or the outline here for the method.

39
00:01:45,731 --> 00:01:48,239
We're gonna have a method called getStudents

40
00:01:48,239 --> 00:01:51,629
and throws Exception, possibly,

41
00:01:51,629 --> 00:01:55,039
and here we have a return type of List&lt;Students&gt;,

42
00:01:55,039 --> 00:01:57,788
so we're gonna get a list of students from a database

43
00:01:57,788 --> 00:01:58,751
and then we'll return that.

44
00:01:58,751 --> 00:02:01,561
So, that's the main method that we're gonna create here

45
00:02:01,561 --> 00:02:03,644
in this Database Utility.

46
00:02:07,563 --> 00:02:09,093
Let me go ahead and fix the imports here,

47
00:02:09,093 --> 00:02:10,510
so java.utl.list,

48
00:02:11,713 --> 00:02:14,210
and let me just kinda stub out some basic code here

49
00:02:14,210 --> 00:02:16,127
to get things lined up.

50
00:02:18,981 --> 00:02:22,314
So, I'll create this ArrayList students.

51
00:02:23,300 --> 00:02:24,542
Right now it's empty

52
00:02:24,542 --> 00:02:25,796
and then I'll say return students.

53
00:02:25,796 --> 00:02:28,037
So, right now I'm just kinda stubbing things out.

54
00:02:28,037 --> 00:02:29,871
In the middle, on line 18,

55
00:02:29,871 --> 00:02:30,882
we're gonna write a lot of code

56
00:02:30,882 --> 00:02:34,176
that'll actually populate that ArrayList,

57
00:02:34,176 --> 00:02:36,080
but for now, I'm just kinda stubbing it out,

58
00:02:36,080 --> 00:02:38,413
just so we can kinda see the big picture here

59
00:02:38,413 --> 00:02:39,746
for this method.

60
00:02:44,369 --> 00:02:45,530
Alright, so this method is gonna do

61
00:02:45,530 --> 00:02:47,559
some database work using JDBC,

62
00:02:47,559 --> 00:02:50,566
so I'll just set up some JDBC objects right now,

63
00:02:50,566 --> 00:02:51,518
set them to null,

64
00:02:51,518 --> 00:02:53,979
and then we'll make use of them a little later here

65
00:02:53,979 --> 00:02:55,697
in this method.

66
00:02:55,697 --> 00:02:58,280
So, I'll set up myConn, myStmt,

67
00:02:59,134 --> 00:03:01,050
and also set up my ResultSet,

68
00:03:01,050 --> 00:03:05,217
and we'll set all these values to null for right now.

69
00:03:06,445 --> 00:03:09,243 line:15% 
And then also, I'll use my Eclipse trick again

70
00:03:09,243 --> 00:03:10,497 line:15% 
to fix the imports here,

71
00:03:10,497 --> 00:03:12,984 line:15% 
so remember, you can go to the Source menu

72
00:03:12,984 --> 00:03:16,401 line:15% 
and you can say Source, Organize Imports,

73
00:03:17,887 --> 00:03:19,384
and this'll basically help you

74
00:03:19,384 --> 00:03:20,963
import the appropriate Classes

75
00:03:20,963 --> 00:03:22,101
and Interfaces, and so on.

76
00:03:22,101 --> 00:03:26,268
So, here I'll choose java.sql.Statement, click Next,

77
00:03:27,267 --> 00:03:28,417
and I'll do a similar thing here

78
00:03:28,417 --> 00:03:30,817
for java.sql.Connection,

79
00:03:30,817 --> 00:03:33,627
and then it'll resolve the result set automatically

80
00:03:33,627 --> 00:03:35,612
and so, that takes care of those errors,

81
00:03:35,612 --> 00:03:38,952
so that looks really good so far.

82
00:03:38,952 --> 00:03:40,671
Alright, so now let's kinda roll out sleeves up

83
00:03:40,671 --> 00:03:42,575
and let's get down here.

84
00:03:42,575 --> 00:03:45,106
So, again, I always like to drop in some comments here,

85
00:03:45,106 --> 00:03:46,511
just to kinda give myself a clue

86
00:03:46,511 --> 00:03:48,426
as far as what I need to do

87
00:03:48,426 --> 00:03:51,726
before I should start writing some real code.

88
00:03:51,726 --> 00:03:53,885
So here, I wanna get a connection first,

89
00:03:53,885 --> 00:03:56,518
I wanna create a sql statement,

90
00:03:56,518 --> 00:03:58,642
then I wanna execute the query,

91
00:03:58,642 --> 00:04:00,256
and then process the result set,

92
00:04:00,256 --> 00:04:01,754
so kinda a similar thing,

93
00:04:01,754 --> 00:04:04,691
what we did in the Test Servlet,

94
00:04:04,691 --> 00:04:06,073
but here we're kinda just doing it

95
00:04:06,073 --> 00:04:08,020
in a more formal fashion here.

96
00:04:08,020 --> 00:04:10,760
And then also, close any of the JDBC objects.

97
00:04:10,760 --> 00:04:14,016
So, that's kinda the big picture,

98
00:04:14,016 --> 00:04:15,420
the main outline

99
00:04:15,420 --> 00:04:18,670
for this method that we're gonna write.

100
00:04:21,234 --> 00:04:26,115
A lot of this code, I'll place inside of a try block

101
00:04:26,115 --> 00:04:27,393
and I'll make use of a finally

102
00:04:27,393 --> 00:04:30,388
to kinda help me clean up some of the JDBC objects,

103
00:04:30,388 --> 00:04:32,350
but we'll flesh that out in a bit,

104
00:04:32,350 --> 00:04:34,683
so let me kinda tab this in.

105
00:04:37,145 --> 00:04:38,445
Let's see, that return students,

106
00:04:38,445 --> 00:04:41,445
I actually wanna move that up a bit,

107
00:04:43,507 --> 00:04:45,585
so let me just grab that line 42

108
00:04:45,585 --> 00:04:46,990
and cut and paste it

109
00:04:46,990 --> 00:04:49,684
and put it right here near the end

110
00:04:49,684 --> 00:04:51,184
of that try block.

111
00:04:53,721 --> 00:04:54,975
Alright, okay, that looks good.

112
00:04:54,975 --> 00:04:57,924
Okay, so now we can start cutting some code here,

113
00:04:57,924 --> 00:04:59,424
so let's get busy.

114
00:05:01,523 --> 00:05:03,137
So, the first thing here is getting a connection,

115
00:05:03,137 --> 00:05:07,885
so here I'll say myConn equals dataSource.getConnection.

116
00:05:07,885 --> 00:05:09,464
Now it'll basically give me a connection

117
00:05:09,464 --> 00:05:10,297
to the database

118
00:05:10,297 --> 00:05:12,158
and actually, give me a connection from

119
00:05:12,158 --> 00:05:13,400
that connection pool.

120
00:05:13,400 --> 00:05:16,105
Remember, dataSource is our ConnectionPool.

121
00:05:16,105 --> 00:05:17,312
Create a sql statement here

122
00:05:17,312 --> 00:05:19,477
and select star from students,

123
00:05:19,477 --> 00:05:21,857
and I'm gonna order by last_name,

124
00:05:21,857 --> 00:05:23,483
so when I get the data from the database,

125
00:05:23,483 --> 00:05:24,946
I want it to be ordered by

126
00:05:24,946 --> 00:05:28,029
or sorted by the student's last name.

127
00:05:30,112 --> 00:05:33,612
I simply create a sql statement object here,

128
00:05:33,612 --> 00:05:37,385
so I'll say myStmt equals myConn.createStatement.

129
00:05:37,385 --> 00:05:40,102
Alright, so that's the basic process here.

130
00:05:40,102 --> 00:05:42,018
Now let's go ahead and execute our query,

131
00:05:42,018 --> 00:05:45,685
so I'll have myRs equals myStmt.executeQuery

132
00:05:46,882 --> 00:05:48,252
and then I pass in that sql String

133
00:05:48,252 --> 00:05:51,190
that I just created a little earlier.

134
00:05:51,190 --> 00:05:54,719
So this will give me a result set.

135
00:05:54,719 --> 00:05:57,958
Now, kinda for the heavy lifting here,

136
00:05:57,958 --> 00:05:59,247
processing a result set,

137
00:05:59,247 --> 00:06:01,128
so we need to go through the loop

138
00:06:01,128 --> 00:06:02,776
and perform some operations

139
00:06:02,776 --> 00:06:04,609
and build up our list.

140
00:06:06,236 --> 00:06:08,837
Alright, so here I'll say while myRs.next,

141
00:06:08,837 --> 00:06:11,159
basically looping through this result set,

142
00:06:11,159 --> 00:06:14,247
then I'll perform some operations.

143
00:06:14,247 --> 00:06:15,443
And again, since we have a lot of work

144
00:06:15,443 --> 00:06:16,612
to do inside of this while loop,

145
00:06:16,612 --> 00:06:17,913
I'll kinda write some comments here,

146
00:06:17,913 --> 00:06:19,814
just to kinda keep us on track.

147
00:06:19,814 --> 00:06:21,509
The first thing we need to do is retrieve data

148
00:06:21,509 --> 00:06:23,297
from the result set row.

149
00:06:23,297 --> 00:06:24,338
Based on that information,

150
00:06:24,338 --> 00:06:26,811
we're gonna create a new student object

151
00:06:26,811 --> 00:06:29,644
and then we're gonna add it to our list of students.

152
00:06:29,644 --> 00:06:31,804
Alright, so that's the basic idea

153
00:06:31,804 --> 00:06:34,804
or outline here for this while loop.

154
00:06:36,657 --> 00:06:37,527
Alrighty, so let's go ahead

155
00:06:37,527 --> 00:06:39,606
and grab the student id from the result set,

156
00:06:39,606 --> 00:06:41,974
so I'll say myRs.getInt id,

157
00:06:41,974 --> 00:06:45,807
and so id in quotes is the actual column name.

158
00:06:48,002 --> 00:06:49,651
I'll also grab the firstName,

159
00:06:49,651 --> 00:06:53,226
so I'll say myRs.getString first_name,

160
00:06:53,226 --> 00:06:56,593
and again, that's the actual column name from the database.

161
00:06:56,593 --> 00:06:59,542
And then I'll just repeat the process here for lastName

162
00:06:59,542 --> 00:07:01,792
and also for email address.

163
00:07:11,117 --> 00:07:13,927
Okay, great, so now that I have the data off of the row,

164
00:07:13,927 --> 00:07:16,481
now I can use that to create a new student object,

165
00:07:16,481 --> 00:07:18,281
so I'll make use of my Student Constructor

166
00:07:18,281 --> 00:07:19,686
that I created earlier

167
00:07:19,686 --> 00:07:22,565
and I'll say tempStudent equals new Student

168
00:07:22,565 --> 00:07:23,900
and I pass in the id,

169
00:07:23,900 --> 00:07:26,289
firstName, lastName, and email address.

170
00:07:26,289 --> 00:07:28,483
So, that'll create a new student object based on

171
00:07:28,483 --> 00:07:30,979
that one row from the result set.

172
00:07:30,979 --> 00:07:34,090
And then I simply wanna add it to my list of students,

173
00:07:34,090 --> 00:07:37,701
so I'll say students.add and I'll give that tempStudent.

174
00:07:37,701 --> 00:07:40,441
So, basically what we'll do in this loop is we'll just

175
00:07:40,441 --> 00:07:41,939
keep processing a result set

176
00:07:41,939 --> 00:07:43,553
and adding those to our list.

177
00:07:43,553 --> 00:07:45,503
Now, you may wonder, well,

178
00:07:45,503 --> 00:07:47,291
where is students, that list of students?

179
00:07:47,291 --> 00:07:48,437
Where'd that come from?

180
00:07:48,437 --> 00:07:51,502
Well, just scrolling up to the top of this method here,

181
00:07:51,502 --> 00:07:53,255
when we first started out we created this

182
00:07:53,255 --> 00:07:54,265
ArrayList of students,

183
00:07:54,265 --> 00:07:56,947
and right now it's empty when we first start out

184
00:07:56,947 --> 00:07:59,060
and then as we go through this for loop

185
00:07:59,060 --> 00:08:01,324
or this while loop here, we're gonna populate it

186
00:08:01,324 --> 00:08:05,655
and keep adding more students to that list.

187
00:08:05,655 --> 00:08:07,393
So, here's the while loop.

188
00:08:07,393 --> 00:08:08,728
Again, we basically retrieve data

189
00:08:08,728 --> 00:08:10,084
from the result set row,

190
00:08:10,084 --> 00:08:11,326
we create the student object,

191
00:08:11,326 --> 00:08:12,739
and we add it to the list of students.

192
00:08:12,739 --> 00:08:13,970
And we just keep doing that

193
00:08:13,970 --> 00:08:17,387
for each element there in our result set.

194
00:08:20,959 --> 00:08:23,034
Now, in a previous video,

195
00:08:23,034 --> 00:08:24,439
when we did our little Test Servlet,

196
00:08:24,439 --> 00:08:26,401
I told you it was kinda quick and dirty,

197
00:08:26,401 --> 00:08:28,177
but here I actually wanna close some

198
00:08:28,177 --> 00:08:29,327
of our JDBC objects,

199
00:08:29,327 --> 00:08:31,277
so here make use of best practices,

200
00:08:31,277 --> 00:08:33,077
kinda clean up after ourselves.

201
00:08:33,077 --> 00:08:34,865
So, whenever we make use of JDBC objects,

202
00:08:34,865 --> 00:08:35,863
we need to close them,

203
00:08:35,863 --> 00:08:38,417
like closing the result set, the statement,

204
00:08:38,417 --> 00:08:39,428
and also, the connection,

205
00:08:39,428 --> 00:08:41,668
and we don't wanna just hold onto them forever

206
00:08:41,668 --> 00:08:43,805
'cause we'll eventually have a memory leak

207
00:08:43,805 --> 00:08:45,883
and we'll run out of statements, cursors,

208
00:08:45,883 --> 00:08:47,740
or run out of connections.

209
00:08:47,740 --> 00:08:50,190
So here, I'm gonna call a method here, close,

210
00:08:50,190 --> 00:08:52,628
myConn, myStmt, and myRs.

211
00:08:52,628 --> 00:08:55,147
Now, Eclipse says, hey, buddy,

212
00:08:55,147 --> 00:08:55,983
you have a problem here.

213
00:08:55,983 --> 00:08:59,524
There's no method in its Class called close.

214
00:08:59,524 --> 00:09:00,639
So, then I'll say, alright Eclipse,

215
00:09:00,639 --> 00:09:02,833
well, why don't you create it for me?

216
00:09:02,833 --> 00:09:03,675
Get to work.

217
00:09:03,675 --> 00:09:05,053
(laughs)

218
00:09:05,053 --> 00:09:08,011
So, this is cool, so if there's a method that's not defined,

219
00:09:08,011 --> 00:09:09,845
you can tell Eclipse to create that method

220
00:09:09,845 --> 00:09:11,586
and they'll basically stub it out

221
00:09:11,586 --> 00:09:14,698
for you automagically, which is kinda cool,

222
00:09:14,698 --> 00:09:15,650
and then inside of this method,

223
00:09:15,650 --> 00:09:17,461
I can go ahead and do my real work.

224
00:09:17,461 --> 00:09:19,957
Alright, so Eclipse created the shell of this method

225
00:09:19,957 --> 00:09:21,374
or the stub of this method

226
00:09:21,374 --> 00:09:22,941
and I'll go ahead and write some code here.

227
00:09:22,941 --> 00:09:26,691
So, I'll just set up a little try catch block

228
00:09:27,875 --> 00:09:30,093
and what I wanna do inside of this try block is,

229
00:09:30,093 --> 00:09:31,544
I basically wanna close each one

230
00:09:31,544 --> 00:09:34,052
of those elements there, or objects,

231
00:09:34,052 --> 00:09:37,291
so I'm gonna close the result set, statement,

232
00:09:37,291 --> 00:09:38,823
and myConn.

233
00:09:38,823 --> 00:09:40,356
So, the first this I do is I check

234
00:09:40,356 --> 00:09:42,469
to make sure that those objects are not null,

235
00:09:42,469 --> 00:09:43,839
so if the myRs is not null,

236
00:09:43,839 --> 00:09:46,344
then I'll say myRs.close.

237
00:09:46,344 --> 00:09:48,375
Alright, so that'll close the result set.

238
00:09:48,375 --> 00:09:50,337
And then I'll do a similar thing here for statement,

239
00:09:50,337 --> 00:09:52,787
so if myStmt is not equal to null,

240
00:09:52,787 --> 00:09:55,037
then I'll say myStmt.close.

241
00:09:59,022 --> 00:10:01,390
And then, I'll do a similar thing here for my connection,

242
00:10:01,390 --> 00:10:03,596
so if myConn's not equal to null,

243
00:10:03,596 --> 00:10:05,930
then I'll say myConn.close.

244
00:10:05,930 --> 00:10:07,390
Now, one thing about myConn is

245
00:10:07,390 --> 00:10:10,896
that it doesn't really close the database connection,

246
00:10:10,896 --> 00:10:12,858
all it does is basically

247
00:10:12,858 --> 00:10:14,727
puts it back into the connection pool.

248
00:10:14,727 --> 00:10:17,583
Kinda makes it available for someone else to use,

249
00:10:17,583 --> 00:10:20,451
so they're kinda marking it as available now

250
00:10:20,451 --> 00:10:22,076
because our connection pool

251
00:10:22,076 --> 00:10:23,574
kinda keeps all those connections open,

252
00:10:23,574 --> 00:10:24,825
but they simply hand them out

253
00:10:24,825 --> 00:10:26,981
to people who really wanna use them or whatever.

254
00:10:26,981 --> 00:10:29,268
So, kinda like when you rent a car

255
00:10:29,268 --> 00:10:32,252
or hire a car, you use it and then you return it,

256
00:10:32,252 --> 00:10:35,061
and then the company will make it available

257
00:10:35,061 --> 00:10:36,048
for someone else to use,

258
00:10:36,048 --> 00:10:36,884
so that's the idea here,

259
00:10:36,884 --> 00:10:40,341
so don't get too concerned about line 76.

260
00:10:40,341 --> 00:10:42,779
They simply make the connection available

261
00:10:42,779 --> 00:10:44,973
for someone else to use.

262
00:10:44,973 --> 00:10:46,146
Alright, but it's really important

263
00:10:46,146 --> 00:10:48,082
that you handle this clean-up work

264
00:10:48,082 --> 00:10:50,659
because if you don't, in a production application,

265
00:10:50,659 --> 00:10:52,168
you could run into problems if you don't

266
00:10:52,168 --> 00:10:54,104
close your result set or statements.

267
00:10:54,104 --> 00:10:55,796
Over time, maybe a couple of days

268
00:10:55,796 --> 00:10:56,957
or a couple of weeks,

269
00:10:56,957 --> 00:10:58,792
you'll eventually run out of some resources,

270
00:10:58,792 --> 00:11:02,959
so make sure you make use of that close technique.

271
00:11:05,737 --> 00:11:07,217
Alright, so that's pretty much it

272
00:11:07,217 --> 00:11:08,796
in our Student Database UTL.

273
00:11:08,796 --> 00:11:10,224
So, we have this method, getStudents,

274
00:11:10,224 --> 00:11:12,810
that's gonna return a list of student objects,

275
00:11:12,810 --> 00:11:14,807
and we kinda went through the basic process

276
00:11:14,807 --> 00:11:16,177
of making this happen.

277
00:11:16,177 --> 00:11:18,139
We created an empty list of students,

278
00:11:18,139 --> 00:11:20,542
got a connection, SQL query,

279
00:11:20,542 --> 00:11:23,364
and then we processed the result set.

280
00:11:23,364 --> 00:11:25,781
And then finally, on line 55,

281
00:11:27,230 --> 00:11:30,573
we actually returned the actual list of students

282
00:11:30,573 --> 00:11:31,604
to whoever called it,

283
00:11:31,604 --> 00:11:33,891
so that's the most important thing there.

284
00:11:33,891 --> 00:11:36,224
So, that's it for our StudentDbUtil

285
00:11:36,224 --> 00:11:37,978
as far as listing students,

286
00:11:37,978 --> 00:11:39,974
so this looks really good so far

287
00:11:39,974 --> 00:11:41,635
and our Servlet will actually make use

288
00:11:41,635 --> 00:11:45,454
of this Database UTL to get data from the database.

289
00:11:45,454 --> 00:11:48,371
So, good job so far with this work.

