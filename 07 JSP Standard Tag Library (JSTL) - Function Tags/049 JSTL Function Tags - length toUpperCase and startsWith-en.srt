1
00:00:01,054 --> 00:00:05,221
<v ->Hey, in this video, we're gonna cover JSTL Function Tags.</v>

2
00:00:07,387 --> 00:00:09,072
Alright, so we've made a good tour so far

3
00:00:09,072 --> 00:00:11,155
with Core Tags, now we'll spend some time

4
00:00:11,155 --> 00:00:13,905
and we'll focus on Function Tags.

5
00:00:18,137 --> 00:00:20,472
So, the Function Tags are basically a collection

6
00:00:20,472 --> 00:00:25,019
of very lightweight function routines you can use.

7
00:00:25,019 --> 00:00:27,131
They're divided into two main areas.

8
00:00:27,131 --> 00:00:30,161
One is the Collection Length, so you can pass it

9
00:00:30,161 --> 00:00:33,895
a, an array list or collection, or a string,

10
00:00:33,895 --> 00:00:35,866
and it'll give you the length of that string.

11
00:00:35,866 --> 00:00:37,112
Then, they also have a collection

12
00:00:37,112 --> 00:00:38,839
of String manipulation tags.

13
00:00:38,839 --> 00:00:41,140
So again, very lightweight stuff like

14
00:00:41,140 --> 00:00:43,514
converting things to upper-case, lower-case,

15
00:00:43,514 --> 00:00:47,085
trimming, splitting, joining, so on and so forth.

16
00:00:47,085 --> 00:00:48,793
So I'll cover a small numnber of the tags

17
00:00:48,793 --> 00:00:51,005
here in this video, and then in the following video

18
00:00:51,005 --> 00:00:53,475
I'll talk about splitting and joining.

19
00:00:53,475 --> 00:00:56,472
But again, I won't have time to cover every tag

20
00:00:56,472 --> 00:00:58,848
in every option, so, just make use of the

21
00:00:58,848 --> 00:01:01,579
resources here, look at like the JSTL JavaDoc

22
00:01:01,579 --> 00:01:05,579
and the JSTL Specification for the gory details.

23
00:01:06,717 --> 00:01:08,955
Now, every page that uses the function tags

24
00:01:08,955 --> 00:01:10,829
they must include this reference.

25
00:01:10,829 --> 00:01:13,022
So you get the taglib, with this uri,

26
00:01:13,022 --> 00:01:16,308
and most commonly used prefix of fn.

27
00:01:16,308 --> 00:01:17,206
And again, you have to do this

28
00:01:17,206 --> 00:01:19,873
exactly the same for it to work.

29
00:01:21,719 --> 00:01:23,023
Alright so let's look at an example,

30
00:01:23,023 --> 00:01:24,958
and again these function tags are very simple,

31
00:01:24,958 --> 00:01:27,355
very lightweight tags for doing some operations.

32
00:01:27,355 --> 00:01:29,831
So the first thing I do is I set up a variable,

33
00:01:29,831 --> 00:01:33,758
the var="data", and the value="Luv2code",

34
00:01:33,758 --> 00:01:36,107
and then I simply wanna get the length of the string.

35
00:01:36,107 --> 00:01:38,448
And so I make use of that function tag in red

36
00:01:38,448 --> 00:01:41,050
fn:length, and then data.

37
00:01:41,050 --> 00:01:42,602
So those will basically give me the length

38
00:01:42,602 --> 00:01:45,065
of the string, so in this case,

39
00:01:45,065 --> 00:01:47,039
the length of luv2code is eight,

40
00:01:47,039 --> 00:01:50,039
pretty simple, very straightforward.

41
00:01:52,538 --> 00:01:53,941
Alright, so let's go into Eclipse

42
00:01:53,941 --> 00:01:55,597
and let's try this out.

43
00:01:55,597 --> 00:01:57,899
So I'll move into that tagdemo project,

44
00:01:57,899 --> 00:02:01,160
move down to WebContent, and imma create a new file here.

45
00:02:01,160 --> 00:02:04,993
So I simply do a right-click, I say new, file.

46
00:02:09,960 --> 00:02:11,092
Now the name of the file I'm gonna create

47
00:02:11,092 --> 00:02:13,425
is called function-test.jsp.

48
00:02:16,320 --> 00:02:17,335
And once you're happy with that name

49
00:02:17,335 --> 00:02:21,819
you can go ahead and click on the finish button.

50
00:02:21,819 --> 00:02:24,196
Alright let me expand my window here.

51
00:02:24,196 --> 00:02:26,971
Let me go ahead and drop in those taglib uris.

52
00:02:26,971 --> 00:02:28,281
Have a little cheat sheet where I just

53
00:02:28,281 --> 00:02:30,024
copy and paste from, 'cause I wanna make sure

54
00:02:30,024 --> 00:02:33,135
I get those, or copy those in the exact same way,

55
00:02:33,135 --> 00:02:34,995
'cause if not I'll have problems,

56
00:02:34,995 --> 00:02:36,225
and I don't like problems.

57
00:02:36,225 --> 00:02:38,002
(laughs)

58
00:02:38,002 --> 00:02:39,363
Alright, so we have this set up.

59
00:02:39,363 --> 00:02:43,530
Let's go ahead and do some of our HTML housekeeping.

60
00:02:45,202 --> 00:02:49,369
And now let's go ahead and set up a variable right now.

61
00:02:53,921 --> 00:02:54,811
So like we had in the slides,

62
00:02:54,811 --> 00:02:56,381
I'll set the variable data equals to

63
00:02:56,381 --> 00:02:58,214
the value of Luv2code.

64
00:02:59,271 --> 00:03:00,145
And now what I'm gonna do is make use

65
00:03:00,145 --> 00:03:01,446
of that function tag, so I'll say

66
00:03:01,446 --> 00:03:03,022
length of the string, and I just drop in

67
00:03:03,022 --> 00:03:07,826
the same string ${data}, JSP expression language,

68
00:03:07,826 --> 00:03:09,255
and then I call that function.

69
00:03:09,255 --> 00:03:12,410
So again I say, fn:length and then in parens

70
00:03:12,410 --> 00:03:14,880
I simply pass in the variable reference here.

71
00:03:14,880 --> 00:03:18,266
So I'll pass in data that I set up on line nine.

72
00:03:18,266 --> 00:03:20,047
And it'll basically take that string there

73
00:03:20,047 --> 00:03:24,890
and give me the length of that string of luv2code.

74
00:03:24,890 --> 00:03:26,850
And also one thing to be aware of is that

75
00:03:26,850 --> 00:03:29,868
occasionally Eclipse may give you an error message.

76
00:03:29,868 --> 00:03:32,464
You can safely ignore it, sometimes Eclipse

77
00:03:32,464 --> 00:03:36,826
has problems processing or passing, some of the

78
00:03:36,826 --> 00:03:40,949
JSTL tags, so in this case you can safety ignore it.

79
00:03:40,949 --> 00:03:43,988
And let's just save our file and let's go ahead and run it.

80
00:03:43,988 --> 00:03:46,502
So I'll do a right-click, I'll choose Run As,

81
00:03:46,502 --> 00:03:50,232
and then Run on Server, and I open up that URL

82
00:03:50,232 --> 00:03:53,146
and there it is, length of the string luv2code,

83
00:03:53,146 --> 00:03:55,908
is eight, so this works out really good.

84
00:03:55,908 --> 00:03:57,485
Just very simple example of using

85
00:03:57,485 --> 00:04:00,042
the JSTL function tags.

86
00:04:00,042 --> 00:04:01,852
Now let's go back in here and try something else

87
00:04:01,852 --> 00:04:03,568
or add in some more work, 'cause that was just

88
00:04:03,568 --> 00:04:05,073
too simple for us almost.

89
00:04:05,073 --> 00:04:07,285
(laughs)

90
00:04:07,285 --> 00:04:10,073
So let me clear out, get some white space here,

91
00:04:10,073 --> 00:04:12,656
let me put in some line breaks.

92
00:04:17,796 --> 00:04:19,002
And what I like to do here is get the

93
00:04:19,002 --> 00:04:22,890
uppercase version of the string luv2code

94
00:04:22,890 --> 00:04:26,459
so put the ${data} in there again.

95
00:04:26,459 --> 00:04:28,069
And now I'll make use of that (mumbles)

96
00:04:28,069 --> 00:04:29,236
so I'll say ${

97
00:04:33,207 --> 00:04:34,790
and fn:toUpperCase,

98
00:04:36,829 --> 00:04:39,707
and in parens I'll put in data.

99
00:04:39,707 --> 00:04:41,106
So in this example here I'm just calling that

100
00:04:41,106 --> 00:04:44,065
to uppercase function, so fn:toUpperCase

101
00:04:44,065 --> 00:04:46,154
and passing in data.

102
00:04:46,154 --> 00:04:48,263
Alright, let's go ahead and save this,

103
00:04:48,263 --> 00:04:50,279
and move back to our browser,

104
00:04:50,279 --> 00:04:53,529
let's hit the little refresh icon here.

105
00:04:54,936 --> 00:04:57,148
Great, this looks good, so the uppercase version

106
00:04:57,148 --> 00:04:59,564
of luv2code is LUV2CODE in all caps.

107
00:04:59,564 --> 00:05:03,725
Really, really good, so, good job with that.

108
00:05:03,725 --> 00:05:04,787
Then again we're just having fun here

109
00:05:04,787 --> 00:05:07,439
playing around with some of these JSTL functions.

110
00:05:07,439 --> 00:05:10,461
So let me copy line 13 again, the line breaks,

111
00:05:10,461 --> 00:05:13,269
put some more line breaks there.

112
00:05:13,269 --> 00:05:15,775
So now I wanna make use of one of those functions here,

113
00:05:15,775 --> 00:05:19,577
starts with, so I kinda zoom out a little bit

114
00:05:19,577 --> 00:05:22,223
to give me some more room to play with.

115
00:05:22,223 --> 00:05:23,527
So basically what I wanna do here is

116
00:05:23,527 --> 00:05:27,444
see if a string starts with the characters luv.

117
00:05:31,626 --> 00:05:34,394
So I make use of that function, starts with,

118
00:05:34,394 --> 00:05:38,085
pass in data, that's the string we're testing against.

119
00:05:38,085 --> 00:05:40,354
With luv, that's the string that we're looking for

120
00:05:40,354 --> 00:05:42,437
to see if it starts with.

121
00:05:43,927 --> 00:05:45,353
Alright, so we have this function laid out here,

122
00:05:45,353 --> 00:05:47,231
starts with, and let's try it out.

123
00:05:47,231 --> 00:05:50,014
So let's save the file, move back over to our browser,

124
00:05:50,014 --> 00:05:52,847
click the refresh icon, and great,

125
00:05:54,132 --> 00:05:56,430
so here it says the string luv2code

126
00:05:56,430 --> 00:05:58,932
starts with luv, that's really good, true.

127
00:05:58,932 --> 00:06:02,323
So, so anyway, just a nice little example here

128
00:06:02,323 --> 00:06:05,235
of making use of some of the JSTL tags

129
00:06:05,235 --> 00:06:08,169
and how you can use them in your application.

130
00:06:08,169 --> 00:06:09,002
Good job.

