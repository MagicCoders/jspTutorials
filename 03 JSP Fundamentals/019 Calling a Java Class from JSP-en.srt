1
00:00:01,212 --> 00:00:03,259
<v ->Hey, in this video I'm gonna show you how to</v>

2
00:00:03,259 --> 00:00:05,509
call a Java class from JSP.

3
00:00:08,851 --> 00:00:10,633
Now, in the previous videos, I mentioned that you

4
00:00:10,633 --> 00:00:14,848
wanted to minimize the scriptlets and declarations in a JSP.

5
00:00:14,848 --> 00:00:17,306
You wanna avoid dumping thousands of lines of code

6
00:00:17,306 --> 00:00:19,028
in your JSP.

7
00:00:19,028 --> 00:00:21,196
Now, it's okay to add small bits of scriplet,

8
00:00:21,196 --> 00:00:24,594
small bits of declarations, but don't overdo it.

9
00:00:24,594 --> 00:00:27,010
So, in order to kinda help with this problem,

10
00:00:27,010 --> 00:00:30,904
you can refactor your code into a separate Java class

11
00:00:30,904 --> 00:00:32,585
or make use of MVC.

12
00:00:32,585 --> 00:00:34,340
So, in this video, I'm actually gonna show you

13
00:00:34,340 --> 00:00:38,340
how to refactor that into a separate Java class.

14
00:00:41,584 --> 00:00:43,873
So what we're gonna do is we're gonna have a JSP file

15
00:00:43,873 --> 00:00:46,287
and this JSP file is gonna actually call a

16
00:00:46,287 --> 00:00:48,619
separate Java class.

17
00:00:48,619 --> 00:00:50,630
So the Java class'll have all of our code,

18
00:00:50,630 --> 00:00:52,394
all of our business logic, and so on,

19
00:00:52,394 --> 00:00:55,345
and the JSP can simply make a call, let the Java code

20
00:00:55,345 --> 00:00:57,432
or the Java class do the heavy lifting,

21
00:00:57,432 --> 00:00:59,110
and then the JSP can get the results and

22
00:00:59,110 --> 00:01:01,777
continue on with its processing.

23
00:01:04,357 --> 00:01:05,832
Now, whenever I build videos like this,

24
00:01:05,832 --> 00:01:08,290
I always like to put together a to do list.

25
00:01:08,290 --> 00:01:11,484
So, the first thing we need to do is create the Java class.

26
00:01:11,484 --> 00:01:13,699
Once we have the class created, we're gonna call our

27
00:01:13,699 --> 00:01:16,116
Java class from the JSP page.

28
00:01:17,622 --> 00:01:19,342
Alright, so a lotta good things in store here.

29
00:01:19,342 --> 00:01:22,925
Let's go ahead and dig in and start coding.

30
00:01:24,245 --> 00:01:27,083
Alright, so what I like to do is move into Eclipse.

31
00:01:27,083 --> 00:01:29,245
And what we're gonna do is we're gonna continue to use

32
00:01:29,245 --> 00:01:31,662
an existing project, jspdemo.

33
00:01:33,470 --> 00:01:36,345
And the first step here is creating a Java class.

34
00:01:36,345 --> 00:01:40,157
So, I'll move into Java resources, source, and actually

35
00:01:40,157 --> 00:01:41,998
I'll create a package first.

36
00:01:41,998 --> 00:01:44,901
So I'll create a package,

37
00:01:44,901 --> 00:01:46,256
alright, just a location to place

38
00:01:46,256 --> 00:01:47,506
our Java class.

39
00:01:48,383 --> 00:01:52,550
So the name of our package will be com.luv2code.jsp.

40
00:01:55,440 --> 00:01:59,951
And you can go ahead and hit the finish button.

41
00:01:59,951 --> 00:02:01,424
So this creates the package.

42
00:02:01,424 --> 00:02:04,623
Now I'm gonna actually create my Java class in this package.

43
00:02:04,623 --> 00:02:08,790
So I'll simply do a right click, and I'll say new, class.

44
00:02:12,886 --> 00:02:14,481
And, for the name of the class,

45
00:02:14,481 --> 00:02:16,731
I'm gonna call it FunUtils.

46
00:02:21,935 --> 00:02:23,982
And I'll keep all of the other defaults,

47
00:02:23,982 --> 00:02:25,050
and once I'm happy with this,

48
00:02:25,050 --> 00:02:28,550
I'll go ahead and click the finish button.

49
00:02:30,538 --> 00:02:32,301
Okay, great, so we have our basic class

50
00:02:32,301 --> 00:02:34,051
here that's lined up.

51
00:02:36,314 --> 00:02:39,890
So what I wanna do is create a method in this class.

52
00:02:39,890 --> 00:02:42,391
And it's the actual method makeItLower.

53
00:02:42,391 --> 00:02:43,701
So I'll make this method static, so

54
00:02:43,701 --> 00:02:46,160
public static String makeItLower,

55
00:02:46,160 --> 00:02:48,086
we pass in a string parameter.

56
00:02:48,086 --> 00:02:50,341
And then again, very trivial method here,

57
00:02:50,341 --> 00:02:52,424
return data.twoLowerCase.

58
00:02:53,325 --> 00:02:55,077
So again, this is the same method we use in our

59
00:02:55,077 --> 00:02:56,671
declarations example.

60
00:02:56,671 --> 00:02:59,254
Here I'm simply gonna refactor it and put it into this

61
00:02:59,254 --> 00:03:00,171
Java class.

62
00:03:01,511 --> 00:03:04,028
So I'll save my file up top.

63
00:03:04,028 --> 00:03:06,522
And so I have this method here, makeItLower, that's part

64
00:03:06,522 --> 00:03:08,439
of this class FunUtils.

65
00:03:12,996 --> 00:03:14,021
Okay, great.

66
00:03:14,021 --> 00:03:16,850
So now what I'd like to do is create a JSP file

67
00:03:16,850 --> 00:03:18,648
that's gonna actually call this class.

68
00:03:18,648 --> 00:03:20,940
So I'll move down to my web content directory

69
00:03:20,940 --> 00:03:25,107
and I'll do a right click, and I'll say new, file.

70
00:03:28,486 --> 00:03:30,296
Now, the name of this file, I'll actually call it

71
00:03:30,296 --> 00:03:31,379
fun-test.jsp.

72
00:03:32,636 --> 00:03:35,672
Because we're testing out the FunUtils.

73
00:03:35,672 --> 00:03:37,271
And once I'm happy with this name here I'll go ahead

74
00:03:37,271 --> 00:03:39,604
and click the finish button.

75
00:03:41,257 --> 00:03:43,713
So I'll go ahead and take care of my basic tags here

76
00:03:43,713 --> 00:03:45,213
for html and body.

77
00:03:54,233 --> 00:03:55,750
And let's have some fun here.

78
00:03:55,750 --> 00:03:57,975
(laughs)

79
00:03:57,975 --> 00:04:00,921
I'm gonna make a call using the JSP expression

80
00:04:00,921 --> 00:04:04,321
and I'll call that method that's defined in that class

81
00:04:04,321 --> 00:04:07,925
but I have to give the fully qualified class name.

82
00:04:07,925 --> 00:04:12,227
So I need to give the package name dot the class name dot

83
00:04:12,227 --> 00:04:13,560
the method name.

84
00:04:17,222 --> 00:04:21,389
And so I'll call makeItLower and I'll pass in "FUN FUN FUN".

85
00:04:23,605 --> 00:04:25,120
Because we're having a lot of fun here.

86
00:04:25,120 --> 00:04:27,203
(laughs)

87
00:04:28,973 --> 00:04:30,364
Alright, so this looks okay.

88
00:04:30,364 --> 00:04:31,509
Well, not really.

89
00:04:31,509 --> 00:04:34,172
There's a lot of stuff going on here.

90
00:04:34,172 --> 00:04:35,245
I'll break it down for you.

91
00:04:35,245 --> 00:04:37,828
So we have this JSP expression.

92
00:04:39,927 --> 00:04:41,910
And we're gonna call this class that's in a package

93
00:04:41,910 --> 00:04:43,910
called com.luv2code.jsp.

94
00:04:45,318 --> 00:04:46,752
That's the package name.

95
00:04:46,752 --> 00:04:49,412
And then the actual class name is FunUntils.

96
00:04:49,412 --> 00:04:51,705
And then the method name is makeItLower.

97
00:04:51,705 --> 00:04:53,585
Ugh. Lotta stuff.

98
00:04:53,585 --> 00:04:55,953
We can actually clean this up a bit by making use of

99
00:04:55,953 --> 00:04:57,620
an import statement.

100
00:05:02,165 --> 00:05:04,990
So what I'll do up top is in a JSP page you can actually

101
00:05:04,990 --> 00:05:06,630
import a class.

102
00:05:06,630 --> 00:05:09,571
So use the angle bracket percent with an "at" symbol

103
00:05:09,571 --> 00:05:13,067
and you say page import and then you give the name of the

104
00:05:13,067 --> 00:05:16,650
package or the class that you wanna import.

105
00:05:20,459 --> 00:05:24,626
So here I'm gonna do an import on com.luv2code.jsp.FunUtils.

106
00:05:26,067 --> 00:05:28,157
And now I can clean up the reference here in the

107
00:05:28,157 --> 00:05:29,994
JSP expression.

108
00:05:29,994 --> 00:05:34,161
So here's my page import: com luv2code jsp dot FunUtils.

109
00:05:35,969 --> 00:05:37,928
So the class is FunUtils.

110
00:05:37,928 --> 00:05:40,139
I could also make use of the wild card if I like,

111
00:05:40,139 --> 00:05:42,939
just using a star if I had more items in there.

112
00:05:42,939 --> 00:05:44,393
And then also the other common question is, well,

113
00:05:44,393 --> 00:05:46,893
what about importing additional packages?

114
00:05:46,893 --> 00:05:49,517
Well, you simply give a comma delimited list of packages

115
00:05:49,517 --> 00:05:51,770
or classes that you wanna import.

116
00:05:51,770 --> 00:05:52,603
And that's it.

117
00:05:52,603 --> 00:05:54,884
So, if we wanted to use ArrayList, that's how we'd

118
00:05:54,884 --> 00:05:56,114
go about it.

119
00:05:56,114 --> 00:05:57,548
But we're not using ArrayList here, so I'll just

120
00:05:57,548 --> 00:06:00,090
go ahead and take it out.

121
00:06:00,090 --> 00:06:03,987
But again, just a comma delimited list.

122
00:06:03,987 --> 00:06:07,706
Alright, so that's my FunTest.jsp, save the file.

123
00:06:07,706 --> 00:06:09,509
Now I can go ahead and run this fun test,

124
00:06:09,509 --> 00:06:11,721
so I can do a right click.

125
00:06:11,721 --> 00:06:13,804
I'll say "run on server".

126
00:06:17,212 --> 00:06:19,056
And it'll prompt me to restart the server.

127
00:06:19,056 --> 00:06:20,861
That's because I added a new class and it needs to do

128
00:06:20,861 --> 00:06:22,497
some class loading.

129
00:06:22,497 --> 00:06:23,760
So just go ahead and hit "okay".

130
00:06:23,760 --> 00:06:25,430
It'll go through it's little process.

131
00:06:25,430 --> 00:06:27,519
But at the end here, we'll have our output.

132
00:06:27,519 --> 00:06:28,711
So, there it is.

133
00:06:28,711 --> 00:06:29,899
"Let's have some fun".

134
00:06:29,899 --> 00:06:31,293
And then we have "fun fun fun".

135
00:06:31,293 --> 00:06:32,153
All lowercase.

136
00:06:32,153 --> 00:06:35,064
Remember, the code example, it was in all caps.

137
00:06:35,064 --> 00:06:36,046
Now it's in all lowercase.

138
00:06:36,046 --> 00:06:38,507
So we know that we are actually calling that method

139
00:06:38,507 --> 00:06:40,965
that's defined in that Java class.

140
00:06:40,965 --> 00:06:41,798
So great.

141
00:06:41,798 --> 00:06:42,631
So this is really good.

142
00:06:42,631 --> 00:06:46,905
So we were successful in having a JSP make a call

143
00:06:46,905 --> 00:06:48,238
to a Java class.

144
00:06:51,776 --> 00:06:53,991
Alright, so let's go ahead and wrap up this video.

145
00:06:53,991 --> 00:06:56,156
So we went through the development process of

146
00:06:56,156 --> 00:06:59,336
calling a Java class from a JSP.

147
00:06:59,336 --> 00:07:00,169
Good job.

